{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","getMessage","setMessage","getBiography","setBiography","getURL","setURL","useEffect","className","id","src","alt","initialValues","inUsername","validate","values","errors","onSubmit","setSubmitting","setTimeout","axios","post","username","then","response","data","status","biography","catch","error","console","log","touched","handleChange","handleBlur","handleSubmit","isSubmitting","type","name","onChange","onBlur","value","placeholder","autoComplete","Object","keys","length","message","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44ea47da.chunk.js","sourcesContent":["import \"./App.scss\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Formik } from \"formik\";\nimport {} from \"dotenv/config\";\n\nfunction App() {\n  const [getMessage, setMessage] = useState({});\n  const [getBiography, setBiography] = useState({});\n  const [getURL, setURL] = useState({});\n\n  useEffect(() => {}, []);\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"container py-5 min-vh-100\">\n        <div className=\"my-auto\">\n          <div id=\"header\" className=\"row justify-content-center my-5\">\n            <div className=\"col-12 d-flex justify-content-center\">\n              <img\n                src=\"/alfred.png\"\n                className=\"img-fluid my-4 mx-auto\"\n                alt=\"logo\"\n              />\n            </div>\n            <div className=\"col-12 text-center\">\n              <h1>APJC</h1>\n            </div>\n            <div className=\"col-12 text-center my-4\">\n              <p>\n                A <b>work in progress</b>. Fetch the profile picture and\n                biography of an Instagram account by entering their username.\n                Just enter the username in the input field below and you are\n                good to go!\n                <br />\n                <br />\n                <small>Not for external use.</small>\n              </p>\n            </div>\n          </div>\n\n          <Formik\n            initialValues={{ inUsername: \"\" }}\n            validate={(values) => {\n              const errors = {};\n              if (!values.inUsername) {\n                errors.inUsername = \"Required\";\n              }\n              return errors;\n            }}\n            onSubmit={(values, { setSubmitting }) => {\n              //const API_URL = process.env.REACT_APP_API_URL;\n              //const FETCH_URL = API_URL + \"/flask/ig\";\n\n              setTimeout(() => {\n                axios\n                  .post(\"https://apjc.herokuapp.com/flask/ig\", {\n                    username: values.inUsername,\n                  })\n                  .then((response) => {\n                    setMessage(response);\n                    if (response.data.status === \"success\") {\n                      setURL(\"/ig/\" + values.inUsername + \".jpg\");\n                      setBiography(response.data.biography);\n                    } else {\n                      setURL({});\n                      setBiography({});\n                    }\n                  })\n                  .catch((error) => {\n                    console.log(error);\n                  });\n                setSubmitting(false);\n              }, 2000);\n            }}\n          >\n            {({\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n              isSubmitting,\n            }) => (\n              <form className=\"w-100\" onSubmit={handleSubmit}>\n                <div className=\"row d-flex justify-content-center my-5\">\n                  <div className=\"col-11 col-md-7\">\n                    <div className=\"card input-card\">\n                      <h2>Who are you looking for...?</h2>\n                      <label className=\"input my-4\">\n                        <input\n                          className=\"input-field\"\n                          type=\"text\"\n                          name=\"inUsername\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.inUsername}\n                          placeholder=\"e.g. apasajabrunei\"\n                          autoComplete=\"off\"\n                        />\n                        <span className=\"input-label\">IG Username</span>\n                        <span className=\"form-error\">\n                          {errors.inUsername &&\n                            touched.inUsername &&\n                            errors.inUsername}\n                        </span>\n                      </label>\n\n                      {isSubmitting ? (\n                        <div className=\"lds-ring\">\n                          <div></div>\n                          <div></div>\n                          <div></div>\n                          <div></div>\n                        </div>\n                      ) : (\n                        <button className=\"btn\" type=\"submit\">\n                          Submit\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </form>\n            )}\n          </Formik>\n\n          <div className=\"row my-5 justify-content-center\">\n            <div className=\"col-11 col-md-5 card card-fetch\">\n              <div className=\"row\">\n                <div className=\"col-12 text-center mb-4\">\n                  <h2>Fetch details</h2>\n                </div>\n                {Object.keys(getURL).length === 0 && (\n                  <div className=\"col-12 text-center my-5\">\n                    <p>\n                      Nothing to see here yet, go ahead and fetch a username!\n                    </p>\n                  </div>\n                )}\n                {Object.keys(getURL).length !== 0 && (\n                  <div className=\"col-12 text-center justify-content-center\">\n                    <img src={getURL} className=\"img-fluid\" alt=\"logo\" />\n                  </div>\n                )}\n                {getMessage.status === 200 && (\n                  <div className=\"col-12 text-center mt-4\">\n                    <p>{getMessage.data.message}</p>\n                  </div>\n                )}\n                {Object.keys(getBiography).length !== 0 && (\n                  <div className=\"col-12 text-center justify-content-center\">\n                    <p className=\"mb-4\">{getBiography}</p>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <footer>\n        <p className=\"py-4 text-center\">\n          Copyright &copy; 2021. All Rights Reserved.\n          <br />A <b>Wafiy</b> Project.\n        </p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}